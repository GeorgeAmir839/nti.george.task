"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var Route_1 = __importDefault(require("./Route"));
var express_1 = require("express");
var Router = (function () {
    function Router(app, options) {
        var _this = this;
        if (options === void 0) { options = {}; }
        this.routes = [];
        this.options = options;
        this.expressRouter = express_1.Router();
        this.app = app;
        (this.options.middlewares || []).forEach(function (middleware) {
            _this.expressRouter.use(middleware);
        });
        this.app.use(this.options.baseUrl || '/', this.expressRouter);
    }
    Router.prototype.register = function (app) {
        this.app = app;
    };
    Router.prototype.addRoute = function (method, path, action) {
        var route = new Route_1.default(method, path, action, this);
        this.routes.push(route);
        return route;
    };
    Router.prototype.resource = function (path, controller) {
        var routes = [];
        if (controller.prototype.index) {
            routes.push(this.addRoute('get', "" + path, [controller, 'index']));
        }
        if (controller.prototype.store) {
            routes.push(this.addRoute('post', "" + path, [controller, 'store']));
        }
        if (controller.prototype.update) {
            routes.push(this.addRoute('put', path + "/:id", [controller, 'update']));
        }
        if (controller.prototype.destroy) {
            routes.push(this.addRoute('delete', path + "/:id", [controller, 'destroy']));
        }
        if (controller.prototype.show) {
            routes.push(this.addRoute('get', path + "/:id", [controller, 'show']));
        }
        return routes;
    };
    Router.prototype.post = function (path, action) {
        return this.addRoute('post', path, action);
    };
    Router.prototype.get = function (path, action) {
        return this.addRoute('get', path, action);
    };
    Router.prototype.put = function (path, action) {
        return this.addRoute('put', path, action);
    };
    Router.prototype.patch = function (path, action) {
        return this.addRoute('patch', path, action);
    };
    Router.prototype.delete = function (path, action) {
        return this.addRoute('delete', path, action);
    };
    return Router;
}());
exports.default = Router;
